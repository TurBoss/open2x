# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

#
# This is necessary because some platforms have special program
# entry points, which require special application initialization.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_LIBS = @ALSA_LIBS@
AR = @AR@
ARCH = @ARCH@
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
ASFLAGS = @ASFLAGS@
AUDIO_DRIVERS = @AUDIO_DRIVERS@
AUDIO_SUBDIRS = @AUDIO_SUBDIRS@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CDROM_DRIVERS = @CDROM_DRIVERS@
CDROM_SUBDIRS = @CDROM_SUBDIRS@
CXX = @CXX@
CXXCPP = @CXXCPP@
DIRECTFB_CFLAGS = @DIRECTFB_CFLAGS@
DIRECTFB_LIBS = @DIRECTFB_LIBS@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
ESD_CFLAGS = @ESD_CFLAGS@
ESD_CONFIG = @ESD_CONFIG@
ESD_LIBS = @ESD_LIBS@
EXEEXT = @EXEEXT@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
HAVE_LIB = @HAVE_LIB@
JOYSTICK_DRIVERS = @JOYSTICK_DRIVERS@
JOYSTICK_SUBDIRS = @JOYSTICK_SUBDIRS@
LIB = @LIB@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIB = @LTLIB@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_RELEASE = @LT_RELEASE@
LT_REVISION = @LT_REVISION@
MAKEINFO = @MAKEINFO@
NASM = @NASM@
NASMFLAGS = @NASMFLAGS@
OBJC = @OBJC@
OBJCDEPMODE = @OBJCDEPMODE@
OBJCFLAGS = @OBJCFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OSMESA_CONFIG = @OSMESA_CONFIG@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
PTH_CONFIG = @PTH_CONFIG@
RANLIB = @RANLIB@
RC = @RC@
SDL_BINARY_AGE = @SDL_BINARY_AGE@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_EXTRADIRS = @SDL_EXTRADIRS@
SDL_EXTRALIBS = @SDL_EXTRALIBS@
SDL_INTERFACE_AGE = @SDL_INTERFACE_AGE@
SDL_LIBS = @SDL_LIBS@
SDL_MAJOR_VERSION = @SDL_MAJOR_VERSION@
SDL_MICRO_VERSION = @SDL_MICRO_VERSION@
SDL_MINOR_VERSION = @SDL_MINOR_VERSION@
SDL_RLD_FLAGS = @SDL_RLD_FLAGS@
SDL_STATIC_LIBS = @SDL_STATIC_LIBS@
SDL_VERSION = @SDL_VERSION@
SHARED_SYSTEM_LIBS = @SHARED_SYSTEM_LIBS@
STATIC_SYSTEM_LIBS = @STATIC_SYSTEM_LIBS@
STRIP = @STRIP@
SYSTEM_LIBS = @SYSTEM_LIBS@
VERSION = @VERSION@
VIDEO_DRIVERS = @VIDEO_DRIVERS@
VIDEO_SUBDIRS = @VIDEO_SUBDIRS@
alsa_lib = @alsa_lib@
arts_lib = @arts_lib@
esd_lib = @esd_lib@

ARCH_SUBDIRS = $(srcdir)/beos                $(srcdir)/epoc                $(srcdir)/dummy                $(srcdir)/macos                $(srcdir)/macosx                $(srcdir)/qtopia                $(srcdir)/win32


# Build a separate library containing the main() entry point.
lib_LIBRARIES = libSDLmain.a
@TARGET_WIN32_TRUE@MAINLIB_ARCH_SRCS = win32/SDL_win32_main.c
@TARGET_WIN32_FALSE@@TARGET_MACOSX_TRUE@MAINLIB_ARCH_SRCS = macosx/SDLMain.m macosx/SDLMain.h
@TARGET_WIN32_FALSE@@TARGET_MACOSX_FALSE@@TARGET_QTOPIA_TRUE@MAINLIB_ARCH_SRCS = qtopia/SDL_qtopia_main.cc
@TARGET_WIN32_FALSE@@TARGET_MACOSX_FALSE@@TARGET_QTOPIA_FALSE@MAINLIB_ARCH_SRCS = dummy/SDL_dummy_main.c
libSDLmain_a_SOURCES = $(MAINLIB_ARCH_SRCS)

# Build an internal library of any special app setup functions
noinst_LTLIBRARIES = libarch.la
@TARGET_BEOS_TRUE@ARCH_SRCS = beos/SDL_BeApp.cc beos/SDL_BeApp.h
@TARGET_BEOS_FALSE@ARCH_SRCS = arch.c

libarch_la_SOURCES = $(ARCH_SRCS)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(lib_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) 
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
libSDLmain_a_LIBADD = 
@TARGET_MACOSX_FALSE@@TARGET_WIN32_TRUE@@TARGET_QTOPIA_TRUE@libSDLmain_a_OBJECTS = 
@TARGET_MACOSX_TRUE@@TARGET_WIN32_FALSE@@TARGET_QTOPIA_TRUE@libSDLmain_a_OBJECTS = 
@TARGET_MACOSX_TRUE@@TARGET_WIN32_FALSE@@TARGET_QTOPIA_FALSE@libSDLmain_a_OBJECTS = 
@TARGET_MACOSX_FALSE@@TARGET_WIN32_TRUE@@TARGET_QTOPIA_FALSE@libSDLmain_a_OBJECTS = 
@TARGET_MACOSX_FALSE@@TARGET_WIN32_FALSE@@TARGET_QTOPIA_TRUE@libSDLmain_a_OBJECTS = 
@TARGET_MACOSX_FALSE@@TARGET_WIN32_FALSE@@TARGET_QTOPIA_FALSE@libSDLmain_a_OBJECTS = 
@TARGET_MACOSX_TRUE@@TARGET_WIN32_TRUE@@TARGET_QTOPIA_FALSE@libSDLmain_a_OBJECTS = 
@TARGET_MACOSX_TRUE@@TARGET_WIN32_TRUE@@TARGET_QTOPIA_TRUE@libSDLmain_a_OBJECTS = 
LTLIBRARIES =  $(noinst_LTLIBRARIES)

libarch_la_LDFLAGS = 
libarch_la_LIBADD = 
@TARGET_BEOS_FALSE@libarch_la_OBJECTS =  arch.lo
@TARGET_BEOS_TRUE@libarch_la_OBJECTS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(libSDLmain_a_SOURCES) $(libarch_la_SOURCES)
OBJECTS = $(libSDLmain_a_OBJECTS) $(libarch_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --foreign --include-deps src/main/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLIBRARIES:

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

distclean-libLIBRARIES:

maintainer-clean-libLIBRARIES:

install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LIBRARIES)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libSDLmain.a: $(libSDLmain_a_OBJECTS) $(libSDLmain_a_DEPENDENCIES)
	-rm -f libSDLmain.a
	$(AR) cru libSDLmain.a $(libSDLmain_a_OBJECTS) $(libSDLmain_a_LIBADD)
	$(RANLIB) libSDLmain.a

mostlyclean-noinstLTLIBRARIES:

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)

distclean-noinstLTLIBRARIES:

maintainer-clean-noinstLTLIBRARIES:

libarch.la: $(libarch_la_OBJECTS) $(libarch_la_DEPENDENCIES)
	$(LINK)  $(libarch_la_LDFLAGS) $(libarch_la_OBJECTS) $(libarch_la_LIBADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src/main

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLIBRARIES
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLIBRARIES
uninstall: uninstall-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-noinstLTLIBRARIES \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLIBRARIES clean-compile clean-libtool \
		clean-noinstLTLIBRARIES clean-tags clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLIBRARIES distclean-compile \
		distclean-libtool distclean-noinstLTLIBRARIES \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-noinstLTLIBRARIES \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLIBRARIES distclean-libLIBRARIES \
clean-libLIBRARIES maintainer-clean-libLIBRARIES uninstall-libLIBRARIES \
install-libLIBRARIES mostlyclean-compile distclean-compile \
clean-compile maintainer-clean-compile mostlyclean-libtool \
distclean-libtool clean-libtool maintainer-clean-libtool \
mostlyclean-noinstLTLIBRARIES distclean-noinstLTLIBRARIES \
clean-noinstLTLIBRARIES maintainer-clean-noinstLTLIBRARIES tags \
mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir info-am info dvi-am dvi check check-am installcheck-am \
installcheck install-exec-am install-exec install-data-am install-data \
install-am install uninstall-am uninstall all-redirect all-am all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


exports:
	for i in $(ARCH_SUBDIRS); do if [ -d $$i/exports ]; then (cd $$i/exports; make); fi; done

# The architecture specific directories need to be copied into place
# when building a distribution.
dist-hook:
	(cd $(distdir) && rm -f $(BUILT_SOURCES))
	cp -rp $(ARCH_SUBDIRS) $(distdir)
	(cd $(distdir) && rm -rf `find . -name CVS`)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
