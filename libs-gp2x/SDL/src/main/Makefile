# Makefile.in generated by automake 1.8.2 from Makefile.am.
# src/main/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# This is necessary because some platforms have special program
# entry points, which require special application initialization.


SOURCES = $(libSDLmain_a_SOURCES) $(libarch_la_SOURCES)

srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/SDL
pkglibdir = $(libdir)/SDL
pkgincludedir = $(includedir)/SDL
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-pc-none
host_triplet = arm-unknown-linux-gnu
target_triplet = arm-unknown-linux-gnu
subdir = src/main
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
ARFLAGS = cru
am__installdirs = $(DESTDIR)$(libdir)
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
libSDLmain_a_AR = $(AR) $(ARFLAGS)
libSDLmain_a_LIBADD =
am__libSDLmain_a_SOURCES_DIST = dummy/SDL_dummy_main.c
am__objects_1 = SDL_dummy_main.$(OBJEXT)
#am__objects_1 = SDL_qtopia_main.$(OBJEXT)
#am__objects_1 =  \
#	SDLMain.$(OBJEXT)
#am__objects_1 = SDL_win32_main.$(OBJEXT)
am_libSDLmain_a_OBJECTS = $(am__objects_1)
libSDLmain_a_OBJECTS = $(am_libSDLmain_a_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libarch_la_LIBADD =
am__libarch_la_SOURCES_DIST = arch.c
am__objects_2 = arch.lo
#am__objects_2 = SDL_BeApp.lo
am_libarch_la_OBJECTS = $(am__objects_2)
libarch_la_OBJECTS = $(am_libarch_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/SDLMain.Po \
	./$(DEPDIR)/SDL_BeApp.Plo \
	./$(DEPDIR)/SDL_dummy_main.Po \
	./$(DEPDIR)/SDL_qtopia_main.Po \
	./$(DEPDIR)/SDL_win32_main.Po ./$(DEPDIR)/arch.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
LTOBJCCOMPILE = $(LIBTOOL) --mode=compile $(OBJC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCFLAGS) $(OBJCFLAGS)
OBJCLD = $(OBJC)
OBJCLINK = $(LIBTOOL) --mode=link $(OBJCLD) $(AM_OBJCFLAGS) \
	$(OBJCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libSDLmain_a_SOURCES) $(libarch_la_SOURCES)
DIST_SOURCES = $(am__libSDLmain_a_SOURCES_DIST) \
	$(am__libarch_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.8
ALLOCA = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = tar
AR = arm-linux-ar
ARCH = linux
ARTSCCONFIG = 
AS = as
ASFLAGS = 
AUDIO_DRIVERS =  disk/libaudio_disk.la dsp/libaudio_dsp.la dma/libaudio_dma.la
AUDIO_SUBDIRS =  disk dsp dma
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.8
AWK = gawk
CC = arm-linux-gcc
CCAS = arm-linux-gcc
CCASFLAGS = 
CCDEPMODE = depmode=gcc
CDROM_DRIVERS =  linux/libcdrom_linux.la
CDROM_SUBDIRS =  linux
CFLAGS = -g -O2 -fexpensive-optimizations -Wall -DDISKAUD_SUPPORT -DUSE_DLOPEN -DOSS_SUPPORT -DENABLE_FBCON -DUSE_INPUT_EVENTS -D_REENTRANT -DSDL_USE_PTHREADS -DHAVE_SIGACTION -I$(top_srcdir)/include -I$(top_srcdir)/include/SDL -I$(top_srcdir)/src -I$(top_srcdir)/src/main/linux -I$(top_srcdir)/src/audio -I$(top_srcdir)/src/video -I$(top_srcdir)/src/video/XFree86/extensions -I$(top_srcdir)/src/events -I$(top_srcdir)/src/joystick -I$(top_srcdir)/src/cdrom -I$(top_srcdir)/src/thread -I$(top_srcdir)/src/timer -I$(top_srcdir)/src/endian -I$(top_srcdir)/src/file -I$(top_builddir)/src/thread
CPP = arm-linux-gcc -E
CPPFLAGS = 
CXX = arm-linux-g++
CXXCPP = arm-linux-g++ -E
CXXDEPMODE = depmode=gcc
CXXFLAGS = -g -O2 -fexpensive-optimizations -Wall -DDISKAUD_SUPPORT -DUSE_DLOPEN -DOSS_SUPPORT -DENABLE_FBCON -DUSE_INPUT_EVENTS -D_REENTRANT -DSDL_USE_PTHREADS -DHAVE_SIGACTION -I$(top_srcdir)/include -I$(top_srcdir)/include/SDL -I$(top_srcdir)/src -I$(top_srcdir)/src/main/linux -I$(top_srcdir)/src/audio -I$(top_srcdir)/src/video -I$(top_srcdir)/src/video/XFree86/extensions -I$(top_srcdir)/src/events -I$(top_srcdir)/src/joystick -I$(top_srcdir)/src/cdrom -I$(top_srcdir)/src/thread -I$(top_srcdir)/src/timer -I$(top_srcdir)/src/endian -I$(top_srcdir)/src/file -I$(top_builddir)/src/thread
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"SDL\" -DVERSION=\"1.2.7\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 
DEPDIR = .deps
DIRECTFB_CFLAGS = 
DIRECTFB_LIBS = 
DLLTOOL = dlltool
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_SHARED_FALSE = 
ENABLE_SHARED_TRUE = #
ENABLE_STATIC_FALSE = #
ENABLE_STATIC_TRUE = 
ESD_CFLAGS = 
ESD_CONFIG = 
ESD_LIBS = 
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
HAVE_NASM_FALSE = 
HAVE_NASM_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JOYSTICK_DRIVERS =  linux/libjoystick_linux.la
JOYSTICK_SUBDIRS =  linux
LDFLAGS = 
LIBOBJS = 
LIBS =  -lpthread
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 7
LT_CURRENT = 7
LT_RELEASE = 1.2
LT_REVISION = 0
MAKEINFO = makeinfo
NASM = 
NASMFLAGS = 
OBJC = 
OBJCDEPMODE = 
OBJCFLAGS = 
OBJDUMP = objdump
OBJEXT = o
PACKAGE = SDL
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = 
PTH_CONFIG = 
RANLIB = arm-linux-ranlib
SDL_BINARY_AGE = 7
SDL_CFLAGS =  -D_REENTRANT
SDL_EXTRADIRS =  audio video events joystick cdrom thread timer endian file cpuinfo
SDL_EXTRALIBS =  audio/libaudio.la video/libvideo.la events/libevents.la joystick/libjoystick.la cdrom/libcdrom.la thread/libthread.la timer/libtimer.la endian/libendian.la file/libfile.la cpuinfo/libcpuinfo.la
SDL_INTERFACE_AGE = 0
SDL_LIBS = -lSDL -lpthread
SDL_MAJOR_VERSION = 1
SDL_MICRO_VERSION = 7
SDL_MINOR_VERSION = 2
SDL_RLD_FLAGS = -Wl,-rpath,${exec_prefix}/lib
SDL_STATIC_LIBS = -lSDL -lpthread
SDL_VERSION = 1.2.7
SET_MAKE = 
SHARED_SYSTEM_LIBS = 
SHELL = /bin/sh
STATIC_SYSTEM_LIBS =  -lm -ldl
STRIP = arm-linux-strip
SYSTEM_LIBS =  -lm -ldl
TARGET_AIX_FALSE = 
TARGET_AIX_TRUE = #
TARGET_BEOS_FALSE = 
TARGET_BEOS_TRUE = #
TARGET_BSDI_FALSE = 
TARGET_BSDI_TRUE = #
TARGET_FREEBSD_FALSE = 
TARGET_FREEBSD_TRUE = #
TARGET_IRIX_FALSE = 
TARGET_IRIX_TRUE = #
TARGET_LINUX_FALSE = #
TARGET_LINUX_TRUE = 
TARGET_MACOSX_FALSE = 
TARGET_MACOSX_TRUE = #
TARGET_MACOS_FALSE = 
TARGET_MACOS_TRUE = #
TARGET_MINT_FALSE = 
TARGET_MINT_TRUE = #
TARGET_NETBSD_FALSE = 
TARGET_NETBSD_TRUE = #
TARGET_OPENBSD_FALSE = 
TARGET_OPENBSD_TRUE = #
TARGET_QNX_FALSE = 
TARGET_QNX_TRUE = #
TARGET_QTOPIA_FALSE = 
TARGET_QTOPIA_TRUE = #
TARGET_SOLARIS_FALSE = 
TARGET_SOLARIS_TRUE = #
TARGET_WIN32_FALSE = 
TARGET_WIN32_TRUE = #
USE_CLONE_FALSE = 
USE_CLONE_TRUE = #
USE_DIRECTX_FALSE = 
USE_DIRECTX_TRUE = #
VERSION = 1.2.7
VIDEO_DRIVERS =  fbcon/libvideo_fbcon.la
VIDEO_SUBDIRS =  fbcon
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ac_ct_AR = 
ac_ct_AS = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DLLTOOL = 
ac_ct_F77 = g77
ac_ct_OBJDUMP = 
ac_ct_RANLIB = 
ac_ct_STRIP = 
am__fastdepCC_FALSE = 
am__fastdepCC_TRUE = #
am__fastdepCXX_FALSE = 
am__fastdepCXX_TRUE = #
am__fastdepOBJC_FALSE = 
am__fastdepOBJC_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
arts_lib = 
bindir = ${exec_prefix}/bin
build = i386-pc-none
build_alias = i386
build_cpu = i386
build_os = none
build_vendor = pc
datadir = ${prefix}/share
esd_lib = 
exec_prefix = ${prefix}
host = arm-unknown-linux-gnu
host_alias = arm-linux
host_cpu = arm
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/depss/DEPSS/library/SDL/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p -- .
oldincludedir = /usr/include
prefix = /home/depss/DEPSS/library/image
program_transform_name = s,^,arm-linux-,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = arm-unknown-linux-gnu
target_alias = arm-linux
target_cpu = arm
target_os = linux-gnu
target_vendor = unknown
ARCH_SUBDIRS = $(srcdir)/beos \
               $(srcdir)/epoc \
               $(srcdir)/dummy \
               $(srcdir)/macos \
               $(srcdir)/macosx \
               $(srcdir)/qtopia \
               $(srcdir)/win32


# Build a separate library containing the main() entry point.
lib_LIBRARIES = libSDLmain.a
MAINLIB_ARCH_SRCS = dummy/SDL_dummy_main.c
#MAINLIB_ARCH_SRCS = qtopia/SDL_qtopia_main.cc
#MAINLIB_ARCH_SRCS = macosx/SDLMain.m macosx/SDLMain.h
#MAINLIB_ARCH_SRCS = win32/SDL_win32_main.c
libSDLmain_a_SOURCES = $(MAINLIB_ARCH_SRCS)

# Build an internal library of any special app setup functions
noinst_LTLIBRARIES = libarch.la
ARCH_SRCS = arch.c
#ARCH_SRCS = beos/SDL_BeApp.cc beos/SDL_BeApp.h
libarch_la_SOURCES = $(ARCH_SRCS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .m .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/main/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/main/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkdir_p) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libSDLmain.a: $(libSDLmain_a_OBJECTS) $(libSDLmain_a_DEPENDENCIES) 
	-rm -f libSDLmain.a
	$(libSDLmain_a_AR) libSDLmain.a $(libSDLmain_a_OBJECTS) $(libSDLmain_a_LIBADD)
	$(RANLIB) libSDLmain.a

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libarch.la: $(libarch_la_OBJECTS) $(libarch_la_DEPENDENCIES) 
	$(CXXLINK)  $(libarch_la_LDFLAGS) $(libarch_la_OBJECTS) $(libarch_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/SDLMain.Po
include ./$(DEPDIR)/SDL_BeApp.Plo
include ./$(DEPDIR)/SDL_dummy_main.Po
include ./$(DEPDIR)/SDL_qtopia_main.Po
include ./$(DEPDIR)/SDL_win32_main.Po
include ./$(DEPDIR)/arch.Plo

.c.o:
#	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c $<

.c.obj:
#	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
#	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LTCOMPILE) -c -o $@ $<

SDL_dummy_main.o: dummy/SDL_dummy_main.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT SDL_dummy_main.o -MD -MP -MF "$(DEPDIR)/SDL_dummy_main.Tpo" -c -o SDL_dummy_main.o `test -f 'dummy/SDL_dummy_main.c' || echo '$(srcdir)/'`dummy/SDL_dummy_main.c; \
#	then mv -f "$(DEPDIR)/SDL_dummy_main.Tpo" "$(DEPDIR)/SDL_dummy_main.Po"; else rm -f "$(DEPDIR)/SDL_dummy_main.Tpo"; exit 1; fi
	source='dummy/SDL_dummy_main.c' object='SDL_dummy_main.o' libtool=no \
	depfile='$(DEPDIR)/SDL_dummy_main.Po' tmpdepfile='$(DEPDIR)/SDL_dummy_main.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o SDL_dummy_main.o `test -f 'dummy/SDL_dummy_main.c' || echo '$(srcdir)/'`dummy/SDL_dummy_main.c

SDL_dummy_main.obj: dummy/SDL_dummy_main.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT SDL_dummy_main.obj -MD -MP -MF "$(DEPDIR)/SDL_dummy_main.Tpo" -c -o SDL_dummy_main.obj `if test -f 'dummy/SDL_dummy_main.c'; then $(CYGPATH_W) 'dummy/SDL_dummy_main.c'; else $(CYGPATH_W) '$(srcdir)/dummy/SDL_dummy_main.c'; fi`; \
#	then mv -f "$(DEPDIR)/SDL_dummy_main.Tpo" "$(DEPDIR)/SDL_dummy_main.Po"; else rm -f "$(DEPDIR)/SDL_dummy_main.Tpo"; exit 1; fi
	source='dummy/SDL_dummy_main.c' object='SDL_dummy_main.obj' libtool=no \
	depfile='$(DEPDIR)/SDL_dummy_main.Po' tmpdepfile='$(DEPDIR)/SDL_dummy_main.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o SDL_dummy_main.obj `if test -f 'dummy/SDL_dummy_main.c'; then $(CYGPATH_W) 'dummy/SDL_dummy_main.c'; else $(CYGPATH_W) '$(srcdir)/dummy/SDL_dummy_main.c'; fi`

SDL_dummy_main.lo: dummy/SDL_dummy_main.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT SDL_dummy_main.lo -MD -MP -MF "$(DEPDIR)/SDL_dummy_main.Tpo" -c -o SDL_dummy_main.lo `test -f 'dummy/SDL_dummy_main.c' || echo '$(srcdir)/'`dummy/SDL_dummy_main.c; \
#	then mv -f "$(DEPDIR)/SDL_dummy_main.Tpo" "$(DEPDIR)/SDL_dummy_main.Plo"; else rm -f "$(DEPDIR)/SDL_dummy_main.Tpo"; exit 1; fi
	source='dummy/SDL_dummy_main.c' object='SDL_dummy_main.lo' libtool=yes \
	depfile='$(DEPDIR)/SDL_dummy_main.Plo' tmpdepfile='$(DEPDIR)/SDL_dummy_main.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o SDL_dummy_main.lo `test -f 'dummy/SDL_dummy_main.c' || echo '$(srcdir)/'`dummy/SDL_dummy_main.c

SDL_win32_main.o: win32/SDL_win32_main.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT SDL_win32_main.o -MD -MP -MF "$(DEPDIR)/SDL_win32_main.Tpo" -c -o SDL_win32_main.o `test -f 'win32/SDL_win32_main.c' || echo '$(srcdir)/'`win32/SDL_win32_main.c; \
#	then mv -f "$(DEPDIR)/SDL_win32_main.Tpo" "$(DEPDIR)/SDL_win32_main.Po"; else rm -f "$(DEPDIR)/SDL_win32_main.Tpo"; exit 1; fi
	source='win32/SDL_win32_main.c' object='SDL_win32_main.o' libtool=no \
	depfile='$(DEPDIR)/SDL_win32_main.Po' tmpdepfile='$(DEPDIR)/SDL_win32_main.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o SDL_win32_main.o `test -f 'win32/SDL_win32_main.c' || echo '$(srcdir)/'`win32/SDL_win32_main.c

SDL_win32_main.obj: win32/SDL_win32_main.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT SDL_win32_main.obj -MD -MP -MF "$(DEPDIR)/SDL_win32_main.Tpo" -c -o SDL_win32_main.obj `if test -f 'win32/SDL_win32_main.c'; then $(CYGPATH_W) 'win32/SDL_win32_main.c'; else $(CYGPATH_W) '$(srcdir)/win32/SDL_win32_main.c'; fi`; \
#	then mv -f "$(DEPDIR)/SDL_win32_main.Tpo" "$(DEPDIR)/SDL_win32_main.Po"; else rm -f "$(DEPDIR)/SDL_win32_main.Tpo"; exit 1; fi
	source='win32/SDL_win32_main.c' object='SDL_win32_main.obj' libtool=no \
	depfile='$(DEPDIR)/SDL_win32_main.Po' tmpdepfile='$(DEPDIR)/SDL_win32_main.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o SDL_win32_main.obj `if test -f 'win32/SDL_win32_main.c'; then $(CYGPATH_W) 'win32/SDL_win32_main.c'; else $(CYGPATH_W) '$(srcdir)/win32/SDL_win32_main.c'; fi`

SDL_win32_main.lo: win32/SDL_win32_main.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT SDL_win32_main.lo -MD -MP -MF "$(DEPDIR)/SDL_win32_main.Tpo" -c -o SDL_win32_main.lo `test -f 'win32/SDL_win32_main.c' || echo '$(srcdir)/'`win32/SDL_win32_main.c; \
#	then mv -f "$(DEPDIR)/SDL_win32_main.Tpo" "$(DEPDIR)/SDL_win32_main.Plo"; else rm -f "$(DEPDIR)/SDL_win32_main.Tpo"; exit 1; fi
	source='win32/SDL_win32_main.c' object='SDL_win32_main.lo' libtool=yes \
	depfile='$(DEPDIR)/SDL_win32_main.Plo' tmpdepfile='$(DEPDIR)/SDL_win32_main.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o SDL_win32_main.lo `test -f 'win32/SDL_win32_main.c' || echo '$(srcdir)/'`win32/SDL_win32_main.c

.cc.o:
#	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
#	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
#	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ $<

SDL_qtopia_main.o: qtopia/SDL_qtopia_main.cc
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SDL_qtopia_main.o -MD -MP -MF "$(DEPDIR)/SDL_qtopia_main.Tpo" -c -o SDL_qtopia_main.o `test -f 'qtopia/SDL_qtopia_main.cc' || echo '$(srcdir)/'`qtopia/SDL_qtopia_main.cc; \
#	then mv -f "$(DEPDIR)/SDL_qtopia_main.Tpo" "$(DEPDIR)/SDL_qtopia_main.Po"; else rm -f "$(DEPDIR)/SDL_qtopia_main.Tpo"; exit 1; fi
	source='qtopia/SDL_qtopia_main.cc' object='SDL_qtopia_main.o' libtool=no \
	depfile='$(DEPDIR)/SDL_qtopia_main.Po' tmpdepfile='$(DEPDIR)/SDL_qtopia_main.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SDL_qtopia_main.o `test -f 'qtopia/SDL_qtopia_main.cc' || echo '$(srcdir)/'`qtopia/SDL_qtopia_main.cc

SDL_qtopia_main.obj: qtopia/SDL_qtopia_main.cc
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SDL_qtopia_main.obj -MD -MP -MF "$(DEPDIR)/SDL_qtopia_main.Tpo" -c -o SDL_qtopia_main.obj `if test -f 'qtopia/SDL_qtopia_main.cc'; then $(CYGPATH_W) 'qtopia/SDL_qtopia_main.cc'; else $(CYGPATH_W) '$(srcdir)/qtopia/SDL_qtopia_main.cc'; fi`; \
#	then mv -f "$(DEPDIR)/SDL_qtopia_main.Tpo" "$(DEPDIR)/SDL_qtopia_main.Po"; else rm -f "$(DEPDIR)/SDL_qtopia_main.Tpo"; exit 1; fi
	source='qtopia/SDL_qtopia_main.cc' object='SDL_qtopia_main.obj' libtool=no \
	depfile='$(DEPDIR)/SDL_qtopia_main.Po' tmpdepfile='$(DEPDIR)/SDL_qtopia_main.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SDL_qtopia_main.obj `if test -f 'qtopia/SDL_qtopia_main.cc'; then $(CYGPATH_W) 'qtopia/SDL_qtopia_main.cc'; else $(CYGPATH_W) '$(srcdir)/qtopia/SDL_qtopia_main.cc'; fi`

SDL_qtopia_main.lo: qtopia/SDL_qtopia_main.cc
#	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SDL_qtopia_main.lo -MD -MP -MF "$(DEPDIR)/SDL_qtopia_main.Tpo" -c -o SDL_qtopia_main.lo `test -f 'qtopia/SDL_qtopia_main.cc' || echo '$(srcdir)/'`qtopia/SDL_qtopia_main.cc; \
#	then mv -f "$(DEPDIR)/SDL_qtopia_main.Tpo" "$(DEPDIR)/SDL_qtopia_main.Plo"; else rm -f "$(DEPDIR)/SDL_qtopia_main.Tpo"; exit 1; fi
	source='qtopia/SDL_qtopia_main.cc' object='SDL_qtopia_main.lo' libtool=yes \
	depfile='$(DEPDIR)/SDL_qtopia_main.Plo' tmpdepfile='$(DEPDIR)/SDL_qtopia_main.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SDL_qtopia_main.lo `test -f 'qtopia/SDL_qtopia_main.cc' || echo '$(srcdir)/'`qtopia/SDL_qtopia_main.cc

SDL_BeApp.o: beos/SDL_BeApp.cc
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SDL_BeApp.o -MD -MP -MF "$(DEPDIR)/SDL_BeApp.Tpo" -c -o SDL_BeApp.o `test -f 'beos/SDL_BeApp.cc' || echo '$(srcdir)/'`beos/SDL_BeApp.cc; \
#	then mv -f "$(DEPDIR)/SDL_BeApp.Tpo" "$(DEPDIR)/SDL_BeApp.Po"; else rm -f "$(DEPDIR)/SDL_BeApp.Tpo"; exit 1; fi
	source='beos/SDL_BeApp.cc' object='SDL_BeApp.o' libtool=no \
	depfile='$(DEPDIR)/SDL_BeApp.Po' tmpdepfile='$(DEPDIR)/SDL_BeApp.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SDL_BeApp.o `test -f 'beos/SDL_BeApp.cc' || echo '$(srcdir)/'`beos/SDL_BeApp.cc

SDL_BeApp.obj: beos/SDL_BeApp.cc
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SDL_BeApp.obj -MD -MP -MF "$(DEPDIR)/SDL_BeApp.Tpo" -c -o SDL_BeApp.obj `if test -f 'beos/SDL_BeApp.cc'; then $(CYGPATH_W) 'beos/SDL_BeApp.cc'; else $(CYGPATH_W) '$(srcdir)/beos/SDL_BeApp.cc'; fi`; \
#	then mv -f "$(DEPDIR)/SDL_BeApp.Tpo" "$(DEPDIR)/SDL_BeApp.Po"; else rm -f "$(DEPDIR)/SDL_BeApp.Tpo"; exit 1; fi
	source='beos/SDL_BeApp.cc' object='SDL_BeApp.obj' libtool=no \
	depfile='$(DEPDIR)/SDL_BeApp.Po' tmpdepfile='$(DEPDIR)/SDL_BeApp.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SDL_BeApp.obj `if test -f 'beos/SDL_BeApp.cc'; then $(CYGPATH_W) 'beos/SDL_BeApp.cc'; else $(CYGPATH_W) '$(srcdir)/beos/SDL_BeApp.cc'; fi`

SDL_BeApp.lo: beos/SDL_BeApp.cc
#	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SDL_BeApp.lo -MD -MP -MF "$(DEPDIR)/SDL_BeApp.Tpo" -c -o SDL_BeApp.lo `test -f 'beos/SDL_BeApp.cc' || echo '$(srcdir)/'`beos/SDL_BeApp.cc; \
#	then mv -f "$(DEPDIR)/SDL_BeApp.Tpo" "$(DEPDIR)/SDL_BeApp.Plo"; else rm -f "$(DEPDIR)/SDL_BeApp.Tpo"; exit 1; fi
	source='beos/SDL_BeApp.cc' object='SDL_BeApp.lo' libtool=yes \
	depfile='$(DEPDIR)/SDL_BeApp.Plo' tmpdepfile='$(DEPDIR)/SDL_BeApp.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SDL_BeApp.lo `test -f 'beos/SDL_BeApp.cc' || echo '$(srcdir)/'`beos/SDL_BeApp.cc

.m.o:
#	if $(OBJCCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(OBJCDEPMODE) $(depcomp) \
	$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
#	if $(OBJCCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(OBJCDEPMODE) $(depcomp) \
	$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.m.lo:
#	if $(LTOBJCCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(OBJCDEPMODE) $(depcomp) \
	$(LTOBJCCOMPILE) -c -o $@ $<

SDLMain.o: macosx/SDLMain.m
#	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT SDLMain.o -MD -MP -MF "$(DEPDIR)/SDLMain.Tpo" -c -o SDLMain.o `test -f 'macosx/SDLMain.m' || echo '$(srcdir)/'`macosx/SDLMain.m; \
#	then mv -f "$(DEPDIR)/SDLMain.Tpo" "$(DEPDIR)/SDLMain.Po"; else rm -f "$(DEPDIR)/SDLMain.Tpo"; exit 1; fi
	source='macosx/SDLMain.m' object='SDLMain.o' libtool=no \
	depfile='$(DEPDIR)/SDLMain.Po' tmpdepfile='$(DEPDIR)/SDLMain.TPo' \
	$(OBJCDEPMODE) $(depcomp) \
	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o SDLMain.o `test -f 'macosx/SDLMain.m' || echo '$(srcdir)/'`macosx/SDLMain.m

SDLMain.obj: macosx/SDLMain.m
#	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT SDLMain.obj -MD -MP -MF "$(DEPDIR)/SDLMain.Tpo" -c -o SDLMain.obj `if test -f 'macosx/SDLMain.m'; then $(CYGPATH_W) 'macosx/SDLMain.m'; else $(CYGPATH_W) '$(srcdir)/macosx/SDLMain.m'; fi`; \
#	then mv -f "$(DEPDIR)/SDLMain.Tpo" "$(DEPDIR)/SDLMain.Po"; else rm -f "$(DEPDIR)/SDLMain.Tpo"; exit 1; fi
	source='macosx/SDLMain.m' object='SDLMain.obj' libtool=no \
	depfile='$(DEPDIR)/SDLMain.Po' tmpdepfile='$(DEPDIR)/SDLMain.TPo' \
	$(OBJCDEPMODE) $(depcomp) \
	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o SDLMain.obj `if test -f 'macosx/SDLMain.m'; then $(CYGPATH_W) 'macosx/SDLMain.m'; else $(CYGPATH_W) '$(srcdir)/macosx/SDLMain.m'; fi`

SDLMain.lo: macosx/SDLMain.m
#	if $(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT SDLMain.lo -MD -MP -MF "$(DEPDIR)/SDLMain.Tpo" -c -o SDLMain.lo `test -f 'macosx/SDLMain.m' || echo '$(srcdir)/'`macosx/SDLMain.m; \
#	then mv -f "$(DEPDIR)/SDLMain.Tpo" "$(DEPDIR)/SDLMain.Plo"; else rm -f "$(DEPDIR)/SDLMain.Tpo"; exit 1; fi
	source='macosx/SDLMain.m' object='SDLMain.lo' libtool=yes \
	depfile='$(DEPDIR)/SDLMain.Plo' tmpdepfile='$(DEPDIR)/SDLMain.TPlo' \
	$(OBJCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o SDLMain.lo `test -f 'macosx/SDLMain.m' || echo '$(srcdir)/'`macosx/SDLMain.m

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES)
installdirs:
	$(mkdir_p) $(DESTDIR)$(libdir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool clean-noinstLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLIBRARIES install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLIBRARIES


exports:
	for i in $(ARCH_SUBDIRS); do if [ -d $$i/exports ]; then (cd $$i/exports; make); fi; done

# The architecture specific directories need to be copied into place
# when building a distribution.
dist-hook:
	(cd $(distdir) && rm -f $(BUILT_SOURCES))
	cp -rp $(ARCH_SUBDIRS) $(distdir)
	(cd $(distdir) && rm -rf `find . -name CVS`)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
